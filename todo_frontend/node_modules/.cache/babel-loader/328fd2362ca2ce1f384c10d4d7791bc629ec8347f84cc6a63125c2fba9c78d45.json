{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gpran\\\\mern-todo-app\\\\TODO\\\\todo_frontend\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Create from './Create';\nimport './App.css';\nimport axios from 'axios';\nimport { BsCircleFill, BsFillCheckCircleFill, BsFillTrashFill, BsPencil } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [updatetask, setUpdatetask] = useState('');\n  const [taskid, setTaskid] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:7070/get').then(result => setTodos(result.data)).catch(err => console.log(err));\n  }, []);\n  const toggleDone = (id, currentStatus) => {\n    axios.put(`http://localhost:7070/update/${id}`, {\n      done: !currentStatus\n    }).then(result => {\n      const updatedTodos = todos.map(todo => {\n        if (todo._id === id) {\n          return {\n            ...todo,\n            done: !currentStatus\n          };\n        }\n        return todo;\n      });\n      setTodos(updatedTodos);\n    }).catch(err => console.log(err));\n  };\n  const Update = (id, updatedTask) => {\n    axios.put(`http://localhost:7070/update/${id}`, {\n      task: updatedTask\n    }).then(result => {\n      const updatedTodos = todos.map(todo => {\n        if (todo._id === id) {\n          return {\n            ...todo,\n            task: updatedTask\n          };\n        }\n        return todo;\n      });\n      setTodos(updatedTodos);\n      setTaskid('');\n      setUpdatetask('');\n      window.location.reload();\n    }).catch(err => console.log(err));\n  };\n  const Hdelete = id => {\n    axios.delete(`http://localhost:7070/delete/${id}`).then(() => {\n      const updatedTodos = todos.filter(todo => todo._id !== id);\n      setTodos(updatedTodos);\n    }).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Create, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), todos.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: \"No tasks found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 38\n    }, this) : todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox\",\n        children: [todo.done ? /*#__PURE__*/_jsxDEV(BsFillCheckCircleFill, {\n          className: \"icon\",\n          onClick: () => toggleDone(todo._id, todo.done)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(BsCircleFill, {\n          className: \"icon\",\n          onClick: () => toggleDone(todo._id, todo.done)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 37\n        }, this), taskid === todo._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: updatetask,\n          onChange: e => setUpdatetask(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: todo.done ? 'through' : 'normal',\n          children: todo.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(BsPencil, {\n            className: \"icon\",\n            onClick: () => {\n              if (taskid === todo._id) {\n                Update(todo._id, updatetask);\n              } else {\n                setTaskid(todo._id);\n                setUpdatetask(todo.task);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(BsFillTrashFill, {\n            className: \"icon\",\n            onClick: () => Hdelete(todo._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }, this)]\n    }, todo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"qeEKvNRMbDOiBj/Ch57E47lVe/4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Create","axios","BsCircleFill","BsFillCheckCircleFill","BsFillTrashFill","BsPencil","jsxDEV","_jsxDEV","Home","_s","todos","setTodos","updatetask","setUpdatetask","taskid","setTaskid","get","then","result","data","catch","err","console","log","toggleDone","id","currentStatus","put","done","updatedTodos","map","todo","_id","Update","updatedTask","task","window","location","reload","Hdelete","delete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","onClick","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/gpran/mern-todo-app/TODO/todo_frontend/src/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Create from './Create';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport { BsCircleFill, BsFillCheckCircleFill, BsFillTrashFill, BsPencil } from 'react-icons/bs';\r\n\r\nconst Home = () => {\r\n    const [todos, setTodos] = useState([]);\r\n    const [updatetask, setUpdatetask] = useState('');\r\n    const [taskid, setTaskid] = useState('');\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:7070/get')\r\n            .then(result => setTodos(result.data))\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    const toggleDone = (id, currentStatus) => {\r\n        axios.put(`http://localhost:7070/update/${id}`, { done: !currentStatus })\r\n            .then(result => {\r\n                const updatedTodos = todos.map(todo => {\r\n                    if (todo._id === id) {\r\n                        return { ...todo, done: !currentStatus };\r\n                    }\r\n                    return todo;\r\n                });\r\n                setTodos(updatedTodos);\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    const Update = (id, updatedTask) => {\r\n        axios.put(`http://localhost:7070/update/${id}`, { task: updatedTask })\r\n            .then(result => {\r\n                const updatedTodos = todos.map(todo => {\r\n                    if (todo._id === id) {\r\n                        return { ...todo, task: updatedTask };\r\n                    }\r\n                    return todo;\r\n                });\r\n                setTodos(updatedTodos);\r\n                setTaskid('');\r\n                setUpdatetask('');\r\n                window.location.reload();\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    const Hdelete = (id) => {\r\n        axios.delete(`http://localhost:7070/delete/${id}`)\r\n            .then(() => {\r\n                const updatedTodos = todos.filter(todo => todo._id !== id);\r\n                setTodos(updatedTodos);\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    return (\r\n        <main>\r\n            <Create />\r\n            {\r\n                todos.length === 0 ? <div className='task'>No tasks found</div> :\r\n                    todos.map((todo) => (\r\n                        <div className='task' key={todo._id}>\r\n                            <div className='checkbox'>\r\n                                {todo.done ? \r\n                                    <BsFillCheckCircleFill className='icon' onClick={() => toggleDone(todo._id, todo.done)} /> :\r\n                                    <BsCircleFill className='icon' onClick={() => toggleDone(todo._id, todo.done)} />}\r\n                                \r\n                                {taskid === todo._id ?\r\n                                    <input type='text' value={updatetask} onChange={e => setUpdatetask(e.target.value)} />\r\n                                    :\r\n                                    <p className={todo.done ? 'through' : 'normal'}>{todo.task}</p>\r\n                                }\r\n                            </div>\r\n                            <div>\r\n                                <span>\r\n                                    <BsPencil className='icon' onClick={() => {\r\n                                        if (taskid === todo._id) {\r\n                                            Update(todo._id, updatetask);\r\n                                        } else {\r\n                                            setTaskid(todo._id);\r\n                                            setUpdatetask(todo.task);\r\n                                        }\r\n                                    }} />\r\n                                    <BsFillTrashFill className='icon' onClick={() => Hdelete(todo._id)} />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n            }\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}